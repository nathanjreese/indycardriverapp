import {
  VImg
} from "./chunk-3R3TJFAT.js";
import {
  genOverlays,
  makeVariantProps,
  useVariant
} from "./chunk-D2M3AMLJ.js";
import {
  VIcon,
  makeSizeProps,
  useSize
} from "./chunk-5FRTJGJU.js";
import {
  makeDensityProps,
  useDensity
} from "./chunk-NXVHU3N4.js";
import {
  makeRoundedProps,
  useRounded
} from "./chunk-FLGXQ3X4.js";
import {
  makeTagProps
} from "./chunk-4HEIMYAJ.js";
import {
  IconValue
} from "./chunk-KRNI3KSU.js";
import {
  makeThemeProps,
  provideTheme
} from "./chunk-D5MKRS23.js";
import {
  genericComponent,
  makeComponentProps,
  propsFactory,
  useRender
} from "./chunk-R5U2OFRE.js";
import {
  createVNode
} from "./chunk-ESTIRR4N.js";

// node_modules/vuetify/lib/components/VAvatar/VAvatar.mjs
import "/Users/nathanreese/Documents/workspace/driverapp1/node_modules/vuetify/lib/components/VAvatar/VAvatar.css";
var makeVAvatarProps = propsFactory({
  start: Boolean,
  end: Boolean,
  icon: IconValue,
  image: String,
  text: String,
  ...makeComponentProps(),
  ...makeDensityProps(),
  ...makeRoundedProps(),
  ...makeSizeProps(),
  ...makeTagProps(),
  ...makeThemeProps(),
  ...makeVariantProps({
    variant: "flat"
  })
}, "VAvatar");
var VAvatar = genericComponent()({
  name: "VAvatar",
  props: makeVAvatarProps(),
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const {
      themeClasses
    } = provideTheme(props);
    const {
      colorClasses,
      colorStyles,
      variantClasses
    } = useVariant(props);
    const {
      densityClasses
    } = useDensity(props);
    const {
      roundedClasses
    } = useRounded(props);
    const {
      sizeClasses,
      sizeStyles
    } = useSize(props);
    useRender(() => createVNode(props.tag, {
      "class": ["v-avatar", {
        "v-avatar--start": props.start,
        "v-avatar--end": props.end
      }, themeClasses.value, colorClasses.value, densityClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value, props.class],
      "style": [colorStyles.value, sizeStyles.value, props.style]
    }, {
      default: () => {
        var _a;
        return [props.image ? createVNode(VImg, {
          "key": "image",
          "src": props.image,
          "alt": "",
          "cover": true
        }, null) : props.icon ? createVNode(VIcon, {
          "key": "icon",
          "icon": props.icon
        }, null) : ((_a = slots.default) == null ? void 0 : _a.call(slots)) ?? props.text, genOverlays(false, "v-avatar")];
      }
    }));
    return {};
  }
});

export {
  VAvatar
};
//# sourceMappingURL=chunk-QBS4IC5W.js.map
